<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BuilderIncomplete" xml:space="preserve">
    <value>Builder has missing data and cannot build.</value>
    <comment>@Invariant</comment>
  </data>
  <data name="CapabilityNotFound" xml:space="preserve">
    <value>No capability found for invariant name '{0}'.</value>
    <comment>0 : capability InvariantName@Invariant</comment>
  </data>
  <data name="CapabilityScriptMismatch" xml:space="preserve">
    <value>Not every capability matches with a script.</value>
    <comment>@Invariant</comment>
  </data>
  <data name="DataContainsSeparator" xml:space="preserve">
    <value>The formatted key or value '{0}' contains the separator ('{1}').</value>
    <comment>0 : the data
1 : the separator@Invariant</comment>
  </data>
  <data name="DeserializationFailed" xml:space="preserve">
    <value>The data could not be deserialized to a {0} because it is invalid or incomplete.</value>
    <comment>0 : target object designation@Invariant</comment>
  </data>
  <data name="ElementHasMultipleNamedChilds" xml:space="preserve">
    <value>Element '{0}' has {2} child elements named '{1}' but only one was expected.</value>
    <comment>0 : parent element name
1 : children elements name
2 : actual child element count@Invariant</comment>
  </data>
  <data name="ElementHasNoNamedChild" xml:space="preserve">
    <value>Element '{0}' has no child element named '{1}'.</value>
    <comment>0 : parent element name
1 : children elements name@Invariant</comment>
  </data>
  <data name="EmptyString" xml:space="preserve">
    <value>The string is empty.</value>
    <comment>@Invariant</comment>
  </data>
  <data name="FileSystemException" xml:space="preserve">
    <value>A filesystem exception occurred.</value>
    <comment>@Invariant</comment>
  </data>
  <data name="HostProcessIsExecuting" xml:space="preserve">
    <value>Host process is already executing. Execution may already be underway.</value>
    <comment>@Invariant</comment>
  </data>
  <data name="HostProcessIsNotExecuting" xml:space="preserve">
    <value>Host process is not executing. Execution is not underway.</value>
    <comment>@Invariant</comment>
  </data>
  <data name="InvalidScriptCommandLine" xml:space="preserve">
    <value>Script command line '{0}' is invalid.</value>
    <comment>0 : script command line@Invariant</comment>
  </data>
  <data name="NoRootExists" xml:space="preserve">
    <value>No root exists in document.</value>
    <comment>@Invariant</comment>
  </data>
  <data name="NoStringFoundForCultureTree" xml:space="preserve">
    <value>No string was found for culture '{0}' or any of its parents.</value>
    <comment>0 : culture key@Invariant</comment>
  </data>
  <data name="RepoNotFound" xml:space="preserve">
    <value>No repository found for script type '{0}'.</value>
    <comment>0 : script type InvariantName@Invariant</comment>
  </data>
  <data name="RepoNotMutable" xml:space="preserve">
    <value>Repository for script type '{0}' is not mutable.</value>
    <comment>1 : script type InvariantName@Invariant</comment>
  </data>
  <data name="ScriptAlreadyExists" xml:space="preserve">
    <value>The script '{0}' already exists.</value>
    <comment>0 : existing script InvariantName@Invariant</comment>
  </data>
  <data name="ScriptDoesNotHaveCapability" xml:space="preserve">
    <value>Script '{0}' doesn't contain capability '{1}'.</value>
    <comment>0 : script InvariantName
1 : capability InvariantName@Invariant</comment>
  </data>
  <data name="ScriptNotFound" xml:space="preserve">
    <value>No script found for invariant name '{0}'.</value>
    <comment>0 : script InvariantName@Invariant</comment>
  </data>
  <data name="ScriptNotFoundAtSource" xml:space="preserve">
    <value>The script at '{0}' could not be found.</value>
    <comment>0 : script source@Invariant</comment>
  </data>
  <data name="ScriptNotInRepo" xml:space="preserve">
    <value>The script is not present in the repository.</value>
    <comment>@Invariant</comment>
  </data>
  <data name="UnknownHostType" xml:space="preserve">
    <value>Unknown host type '{0}'.</value>
    <comment>0 : host type designation@Invariant</comment>
  </data>
</root>