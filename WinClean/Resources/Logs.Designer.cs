//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Scover.WinClean.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Logs {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Logs() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Scover.WinClean.Resources.Logs", typeof(Logs).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Canceled script execution.
        /// </summary>
        public static string CanceledScriptExecution {
            get {
                return ResourceManager.GetString("CanceledScriptExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cleared logs folder..
        /// </summary>
        public static string ClearedLogsFolder {
            get {
                return ResourceManager.GetString("ClearedLogsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Exiting the application with code {0}..
        /// </summary>
        public static string Exiting {
            get {
                return ResourceManager.GetString("Exiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to delete log file &apos;{0}&apos;: {1}.
        /// </summary>
        public static string FailedToDeleteLogFile {
            get {
                return ResourceManager.GetString("FailedToDeleteLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Finished script execution..
        /// </summary>
        public static string FinishedScriptExecution {
            get {
                return ResourceManager.GetString("FinishedScriptExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Script at &apos;{0}&apos; added as &apos;{1}&apos;..
        /// </summary>
        public static string ScriptAdded {
            get {
                return ResourceManager.GetString("ScriptAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Couldn&apos;t add script at &apos;{0}&apos; as script &apos;{1}&apos; already exists..
        /// </summary>
        public static string ScriptAlreadyExistsCannotAdd {
            get {
                return ResourceManager.GetString("ScriptAlreadyExistsCannotAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Script &apos;{0}&apos; deleted..
        /// </summary>
        public static string ScriptDeleted {
            get {
                return ResourceManager.GetString("ScriptDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execution of &apos;{0}&apos; (&apos;{1}&apos;) aborted..
        /// </summary>
        public static string ScriptExecutionAborted {
            get {
                return ResourceManager.GetString("ScriptExecutionAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execution of &apos;{0}&apos; (&apos;{1}&apos;) completed. (exit code: {2}, success: {3}).
        /// </summary>
        public static string ScriptExecutionCompleted {
            get {
                return ResourceManager.GetString("ScriptExecutionCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execution of &apos;{0}&apos; (&apos;{1}&apos;) paused..
        /// </summary>
        public static string ScriptExecutionPaused {
            get {
                return ResourceManager.GetString("ScriptExecutionPaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execution of &apos;{0}&apos; (&apos;{1}&apos;) resumed..
        /// </summary>
        public static string ScriptExecutionResumed {
            get {
                return ResourceManager.GetString("ScriptExecutionResumed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execution of &apos;{0}&apos; (&apos;{1}&apos;) skipped..
        /// </summary>
        public static string ScriptExecutionSkipped {
            get {
                return ResourceManager.GetString("ScriptExecutionSkipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Script at &apos;{0}&apos; could not be loaded: {1}.
        /// </summary>
        public static string ScriptLoadError {
            get {
                return ResourceManager.GetString("ScriptLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Script at &apos;{0}&apos; was not loaded: {1}.
        /// </summary>
        public static string ScriptNotLoaded {
            get {
                return ResourceManager.GetString("ScriptNotLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Script &apos;{1}&apos; overwritten by script at &apos;{0}&apos;..
        /// </summary>
        public static string ScriptOverwritten {
            get {
                return ResourceManager.GetString("ScriptOverwritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scripts saved..
        /// </summary>
        public static string ScriptsSaved {
            get {
                return ResourceManager.GetString("ScriptsSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Settings reset..
        /// </summary>
        public static string SettingsReset {
            get {
                return ResourceManager.GetString("SettingsReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Settings saved..
        /// </summary>
        public static string SettingsSaved {
            get {
                return ResourceManager.GetString("SettingsSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Started execution of {0} script(s)..
        /// </summary>
        public static string StartedScriptExecution {
            get {
                return ResourceManager.GetString("StartedScriptExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à System restart initiated..
        /// </summary>
        public static string SystemRestartInitiated {
            get {
                return ResourceManager.GetString("SystemRestartInitiated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An unhandled exception occured: {0}.
        /// </summary>
        public static string UnhandledException {
            get {
                return ResourceManager.GetString("UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Version {0} is available (current version is {1})..
        /// </summary>
        public static string UpdateAvailable {
            get {
                return ResourceManager.GetString("UpdateAvailable", resourceCulture);
            }
        }
    }
}
