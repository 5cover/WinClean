//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Scover.WinClean.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Scover.WinClean.Resources.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Builder has missing data and cannot build..
        /// </summary>
        public static string BuilderIncomplete {
            get {
                return ResourceManager.GetString("BuilderIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No capability found for invariant name &apos;{0}&apos;..
        /// </summary>
        public static string CapabilityNotFound {
            get {
                return ResourceManager.GetString("CapabilityNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not every capability matches with a script..
        /// </summary>
        public static string CapabilityScriptMismatch {
            get {
                return ResourceManager.GetString("CapabilityScriptMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The formatted key or value &apos;{0}&apos; contains the separator (&apos;{1}&apos;)..
        /// </summary>
        public static string DataContainsSeparator {
            get {
                return ResourceManager.GetString("DataContainsSeparator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The data could not be deserialized to a {0} because it is invalid or incomplete..
        /// </summary>
        public static string DeserializationFailed {
            get {
                return ResourceManager.GetString("DeserializationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Element &apos;{0}&apos; has {2} child elements named &apos;{1}&apos; but only one was expected..
        /// </summary>
        public static string ElementHasMultipleNamedChilds {
            get {
                return ResourceManager.GetString("ElementHasMultipleNamedChilds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Element &apos;{0}&apos; has no child element named &apos;{1}&apos;..
        /// </summary>
        public static string ElementHasNoNamedChild {
            get {
                return ResourceManager.GetString("ElementHasNoNamedChild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The string is empty..
        /// </summary>
        public static string EmptyString {
            get {
                return ResourceManager.GetString("EmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A filesystem exception occurred..
        /// </summary>
        public static string FileSystemException {
            get {
                return ResourceManager.GetString("FileSystemException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Host process is already executing. Execution may already be underway..
        /// </summary>
        public static string HostProcessIsExecuting {
            get {
                return ResourceManager.GetString("HostProcessIsExecuting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Host process is not executing. Execution is not underway..
        /// </summary>
        public static string HostProcessIsNotExecuting {
            get {
                return ResourceManager.GetString("HostProcessIsNotExecuting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Script command line &apos;{0}&apos; is invalid..
        /// </summary>
        public static string InvalidScriptCommandLine {
            get {
                return ResourceManager.GetString("InvalidScriptCommandLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No root exists in document..
        /// </summary>
        public static string NoRootExists {
            get {
                return ResourceManager.GetString("NoRootExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No string was found for culture &apos;{0}&apos; or any of its parents..
        /// </summary>
        public static string NoStringFoundForCultureTree {
            get {
                return ResourceManager.GetString("NoStringFoundForCultureTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No repository found for script type &apos;{0}&apos;..
        /// </summary>
        public static string RepoNotFound {
            get {
                return ResourceManager.GetString("RepoNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Repository for script type &apos;{0}&apos; is not mutable..
        /// </summary>
        public static string RepoNotMutable {
            get {
                return ResourceManager.GetString("RepoNotMutable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The script &apos;{0}&apos; already exists..
        /// </summary>
        public static string ScriptAlreadyExists {
            get {
                return ResourceManager.GetString("ScriptAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Script &apos;{0}&apos; doesn&apos;t contain capability &apos;{1}&apos;..
        /// </summary>
        public static string ScriptDoesNotHaveCapability {
            get {
                return ResourceManager.GetString("ScriptDoesNotHaveCapability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No script found for invariant name &apos;{0}&apos;..
        /// </summary>
        public static string ScriptNotFound {
            get {
                return ResourceManager.GetString("ScriptNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The script at &apos;{0}&apos; could not be found..
        /// </summary>
        public static string ScriptNotFoundAtSource {
            get {
                return ResourceManager.GetString("ScriptNotFoundAtSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The script is not present in the repository..
        /// </summary>
        public static string ScriptNotInRepo {
            get {
                return ResourceManager.GetString("ScriptNotInRepo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unknown host type &apos;{0}&apos;..
        /// </summary>
        public static string UnknownHostType {
            get {
                return ResourceManager.GetString("UnknownHostType", resourceCulture);
            }
        }
    }
}
