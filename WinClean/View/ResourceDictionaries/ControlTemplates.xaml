<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--  Microsoft's default ControlTemplate for TabItem.  -->
    <ControlTemplate x:Key="DefaultTabItemTemplate" TargetType="{x:Type TabItem}">
        <Grid Name="templateRoot" SnapsToDevicePixels="True">
            <Border
                Name="mainBorder"
                Margin="0"
                Background="{TemplateBinding Panel.Background}"
                BorderBrush="{TemplateBinding Border.BorderBrush}"
                BorderThickness="1,1,1,0">
                <Border
                    Name="innerBorder"
                    Margin="-1"
                    Background="#FFFFFF"
                    BorderBrush="#ACACAC"
                    BorderThickness="1,1,1,0"
                    Opacity="0" />
            </Border>
            <ContentPresenter
                Name="contentPresenter"
                Margin="{TemplateBinding Control.Padding}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Content="{TemplateBinding HeaderedContentControl.Header}"
                ContentSource="Header"
                ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}"
                ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="mainBorder" Property="Panel.Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Offset="0" Color="#ECF4FC" />
                                <GradientStop Offset="1" Color="#DCECFC" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="#7EB4EA" />
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="mainBorder" Property="Panel.Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Offset="0" Color="#ECF4FC" />
                                <GradientStop Offset="1" Color="#DCECFC" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="#7EB4EA" />
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="mainBorder" Property="Panel.Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Offset="0" Color="#ECF4FC" />
                                <GradientStop Offset="1" Color="#DCECFC" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="#7EB4EA" />
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="mainBorder" Property="Panel.Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Offset="0" Color="#ECF4FC" />
                                <GradientStop Offset="1" Color="#DCECFC" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="#7EB4EA" />
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                <Setter TargetName="mainBorder" Property="Panel.Background" Value="#F0F0F0" />
                <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="#D9D9D9" />
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                <Setter TargetName="mainBorder" Property="Panel.Background" Value="#F0F0F0" />
                <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="#D9D9D9" />
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                <Setter TargetName="mainBorder" Property="Panel.Background" Value="#F0F0F0" />
                <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="#D9D9D9" />
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                <Setter TargetName="mainBorder" Property="Panel.Background" Value="#F0F0F0" />
                <Setter TargetName="mainBorder" Property="Border.BorderBrush" Value="#D9D9D9" />
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter Property="FrameworkElement.Margin" Value="-2,-2,0,-2" />
                <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter Property="FrameworkElement.Margin" Value="-2,0,-2,-2" />
                <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter Property="FrameworkElement.Margin" Value="0,-2,-2,-2" />
                <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}}" Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter Property="FrameworkElement.Margin" Value="-2,-2,-2,0" />
                <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
                <Setter TargetName="innerBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="1,1,1,0" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--  Improved version of Microsoft's default ControlTemplate for DataGridCell.  -->
    <!--  Adds support for content alignement  -->
    <ControlTemplate x:Key="ImprovedDataGridCellTemplate" TargetType="{x:Type DataGridCell}">
        <Border
            Name="Bd"
            Margin="{TemplateBinding Margin}"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Panel.Background}"
            BorderBrush="{TemplateBinding Border.BorderBrush}"
            BorderThickness="{TemplateBinding Border.BorderThickness}"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding ContentControl.Content}"
                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true" />
                    <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                <Setter TargetName="Bd" Property="Border.BorderThickness" Value="1.5,1.5,1.5,1.5" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>