<Window
    x:Class="Scover.WinClean.View.Windows.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:Scover.WinClean.View.Behaviors"
    xmlns:controls="clr-namespace:Scover.WinClean.View.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:interopServices="clr-namespace:System.Runtime.InteropServices;assembly=System.Runtime.InteropServices.RuntimeInformation"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:metadatas="clr-namespace:Scover.WinClean.Model.Metadatas"
    xmlns:ui="clr-namespace:Scover.WinClean.Resources.UI"
    xmlns:viewModel="clr-namespace:Scover.WinClean.ViewModel"
    xmlns:windows="clr-namespace:Scover.WinClean.ViewModel.Windows"
    x:Name="window"
    Title="{Binding ApplicationName}"
    Width="{Binding Width, Mode=TwoWay}"
    Height="{Binding Height, Mode=TwoWay}"
    MinWidth="{Binding MinHeight, ElementName=window, Converter={StaticResource GoldenRatio}}"
    MinHeight="436"
    d:DataContext="{d:DesignInstance Type=windows:MainViewModel}"
    Background="{x:Static SystemColors.ControlBrush}"
    Left="{Binding Left, Mode=TwoWay}"
    Top="{Binding Top, Mode=TwoWay}"
    WindowState="{Binding WindowState, Mode=TwoWay}"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing" SourceName="window">
            <i:InvokeCommandAction Command="{Binding SaveScripts}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <DockPanel>
        <StatusBar Background="{x:Static SystemColors.ControlLightBrush}" DockPanel.Dock="Bottom">
            <TextBlock Text="{x:Static interopServices:RuntimeInformation.OSDescription}" />
            <Separator />
            <TextBlock Text="{Binding ScriptCount, StringFormat={x:Static ui:MainWindow.ScriptCount}}" />
        </StatusBar>
        <Menu
            VerticalAlignment="Center"
            Background="{x:Static SystemColors.ControlLightBrush}"
            DockPanel.Dock="Top">
            <MenuItem Header="{x:Static ui:MainWindow.MenuFile}">
                <MenuItem Command="{Binding OpenCustomScriptsDir}" Header="{x:Static ui:MainWindow.MenuOpenCustomScriptsDir}" />
                <MenuItem Command="{Binding OpenLogsDir}" Header="{x:Static ui:MainWindow.MenuOpenLogsDir}" />
                <MenuItem Command="{Binding ClearLogs}" Header="{x:Static ui:MainWindow.MenuClearLogs}" />
                <MenuItem Header="{x:Static ui:Buttons.Exit}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:CallMethodAction MethodName="Close" TargetObject="{Binding ElementName=window}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static ui:MainWindow.MenuSelectScripts}">
                <MenuItem.Resources>
                    <Style x:Key="ScriptMetadataMenuItemStyle" TargetType="MenuItem">
                        <Setter Property="Command" Value="{Binding DataContext.CheckScriptsByProperty, ElementName=window}" />
                        <Setter Property="CommandParameter" Value="{Binding}" />
                        <Setter Property="ToolTip" Value="{Binding Description}" />
                    </Style>
                </MenuItem.Resources>
                <MenuItem Command="{Binding CheckAllScripts}" Header="{x:Static ui:MainWindow.MenuAll}" />
                <MenuItem Command="{Binding UncheckAllScripts}" Header="{x:Static ui:MainWindow.MenuNone}" />
                <MenuItem
                    DisplayMemberPath="Name"
                    Header="{x:Static ui:MainWindow.Category}"
                    ItemContainerStyle="{StaticResource ScriptMetadataMenuItemStyle}"
                    ItemsSource="{Binding Metadatas, ConverterParameter={x:Type metadatas:Category}, Converter={StaticResource TypedEnumerableDictionaryLookup}}" />
                <MenuItem
                    DisplayMemberPath="Name"
                    Header="{x:Static ui:MainWindow.SafetyLevel}"
                    ItemsSource="{Binding Metadatas, ConverterParameter={x:Type metadatas:SafetyLevel}, Converter={StaticResource TypedEnumerableDictionaryLookup}}">
                    <MenuItem.ItemContainerStyle>
                        <Style BasedOn="{StaticResource ScriptMetadataMenuItemStyle}" TargetType="MenuItem">
                            <Setter Property="Background" Value="{Binding Color, Converter={StaticResource ColorToBrush}, ConverterParameter=0.15}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem
                    DisplayMemberPath="Name"
                    Header="{x:Static ui:MainWindow.Impact}"
                    ItemContainerStyle="{StaticResource ScriptMetadataMenuItemStyle}"
                    ItemsSource="{Binding Metadatas, ConverterParameter={x:Type metadatas:Impact}, Converter={StaticResource TypedEnumerableDictionaryLookup}}" />
            </MenuItem>
            <MenuItem Command="{Binding ShowSettingsWindow}" Header="{x:Static ui:MainWindow.MenuSettings}" />
            <MenuItem Header="{x:Static ui:MainWindow.MenuHelp}">
                <MenuItem Command="{Binding OpenOnlineWiki}" Header="{x:Static ui:MainWindow.MenuOnlineWiki}" />
                <MenuItem Command="{Binding ShowAboutWindow}">
                    <MenuItem.Header>
                        <!--  HeaderStringFormat does not work with access keys  -->
                        <AccessText Text="{Binding ApplicationName, StringFormat={x:Static ui:MainWindow.MenuAbout}}" />
                    </MenuItem.Header>
                </MenuItem>
            </MenuItem>
        </Menu>
        <Grid Margin="12">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="8" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <TabControl
                Grid.Row="0"
                Margin="0,0,10,12"
                behaviors:TabContent.IsCached="True"
                IsSynchronizedWithCurrentItem="True"
                ItemsSource="{Binding Scripts.View.Groups}">
                <!--  Groups by Category  -->
                <behaviors:TabContent.Template>
                    <DataTemplate DataType="{x:Type CollectionViewGroup}">
                        <TabControl
                            behaviors:TabContent.IsCached="True"
                            IsSynchronizedWithCurrentItem="True"
                            ItemsSource="{Binding Items}">
                            <!--  Groups by Usage  -->
                            <behaviors:TabContent.Template>
                                <DataTemplate DataType="{x:Type CollectionViewGroup}">
                                    <controls:ScriptListView Content="{Binding Items, Converter={StaticResource FlattenGroupsItems}}" />
                                </DataTemplate>
                            </behaviors:TabContent.Template>
                            <TabControl.ItemContainerStyle>
                                <Style TargetType="TabItem">
                                    <Setter Property="Header" Value="{Binding Name.Name}" />
                                    <Setter Property="ToolTip" Value="{Binding Name.Description}" />
                                </Style>
                            </TabControl.ItemContainerStyle>
                        </TabControl>
                    </DataTemplate>
                </behaviors:TabContent.Template>
                <TabControl.ItemContainerStyle>
                    <Style TargetType="TabItem">
                        <Setter Property="Header" Value="{Binding Name.Name}" />
                        <Setter Property="ToolTip" Value="{Binding Name.Description}" />
                    </Style>
                </TabControl.ItemContainerStyle>
            </TabControl>

            <!--<TabControl
                Grid.Row="0"
                Margin="0,0,10,12"
                behaviors:TabContent.IsCached="True"
                IsSynchronizedWithCurrentItem="True"
                ItemsSource="{Binding Groups.View}">
                <TabControl.ItemContainerStyle>
                    <Style TargetType="TabItem">
                        <Setter Property="Header" Value="{Binding Category.Name}" />
                        <Setter Property="ToolTip" Value="{Binding Category.Description}" />
                    </Style>
                </TabControl.ItemContainerStyle>
                <behaviors:TabContent.Template>
                    <DataTemplate DataType="viewModel:ScriptCategoryGroup">
                        <controls:ScriptListView Content="{Binding Scripts.View}" />
                    </DataTemplate>
                </behaviors:TabContent.Template>
            </TabControl>-->

            <GridSplitter
                Grid.RowSpan="3"
                Grid.Column="1"
                Margin="0,-13"
                HorizontalAlignment="Stretch"
                Background="{x:Static SystemColors.ControlLightBrush}" />

            <controls:ScriptView
                x:Name="scriptView"
                Grid.Row="0"
                Grid.Column="2"
                Margin="10,0,0,12"
                Content="{Binding Scripts.View.CurrentItem}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ScriptRemoved" SourceName="scriptView">
                        <i:InvokeCommandAction Command="{Binding RemoveCurrentScript}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="ScriptChangedCategory" SourceName="scriptView">
                        <i:InvokeCommandAction Command="{Binding UpdateCurrentScriptCategory}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </controls:ScriptView>
            <Button
                Grid.Row="1"
                HorizontalAlignment="Center"
                Command="{Binding AddScripts}"
                Content="{x:Static ui:Buttons.AddScripts}" />
            <Button
                Grid.Row="1"
                Grid.Column="2"
                HorizontalAlignment="Center"
                Command="{Binding ExecuteScripts}"
                Content="{x:Static ui:Buttons.ExecuteScripts}" />
        </Grid>
    </DockPanel>
</Window>