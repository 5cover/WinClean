<UserControl
    x:Class="Scover.WinClean.View.Controls.ScriptListView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Scover.WinClean.View.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="clr-namespace:Scover.WinClean.Resources.UI"
    xmlns:viewModel="clr-namespace:Scover.WinClean.ViewModel"
    xmlns:winclean="clr-namespace:Scover.WinClean"
    x:Name="scriptListViewUserControl"
    mc:Ignorable="d">
    <UserControl.ContentTemplate>
        <DataTemplate>
            <DataGrid
                x:Name="scriptsDataGrid"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                CanUserDeleteRows="True"
                CanUserReorderColumns="False"
                CanUserResizeRows="False"
                GridLinesVisibility="None"
                HeadersVisibility="Column"
                IsSynchronizedWithCurrentItem="True"
                ItemsSource="{Binding}"
                SelectedIndex="0"
                SelectedItem="{Binding SelectedScript, Mode=TwoWay, ElementName=scriptListViewUserControl}"
                SelectionMode="Single"
                SelectionUnit="FullRow"
                VirtualizingPanel.IsContainerVirtualizable="True"
                VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                VirtualizingPanel.VirtualizationMode="Recycling">
                <DataGrid.CommandBindings>
                    <CommandBinding
                        CanExecute="DeleteCanExecute"
                        Command="Delete"
                        Executed="DeleteExecuted" />
                </DataGrid.CommandBindings>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <!--  Prevent borders between cells when selected  -->
                        <Setter Property="BorderThickness" Value="0" />
                        <!--  Prevent text from become white when item selected  -->
                        <Setter Property="Foreground" Value="Black" />
                        <!--  Center every cell. This will prevent the text from being misaligned with the check box.  -->
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <!--  No cell selection overlay  -->
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="{Binding SafetyLevel.Color, Converter={StaticResource ColorToBrush}, ConverterParameter={StaticResource SafetyLevelOpacity}}" />
                        <Setter Property="BorderBrush" Value="{Binding SafetyLevel.Color, Converter={StaticResource ColorToBrush}, ConverterParameter={StaticResource SafetyLevelOpacity}}" />
                        <Setter Property="Margin" Value="1" />
                        <Setter Property="BorderThickness" Value="1" />
                        <!--  Stops auto scrolling when a cell is clicked  -->
                        <EventSetter Event="RequestBringIntoView" Handler="DataGridRowRequestBringIntoViewSwallow" />
                        <Style.Triggers>
                            <!--  Hover  -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1F26A0DA" />
                                <Setter Property="BorderBrush" Value="#A826A0DA" />
                            </Trigger>
                            <!--  Selected inactive  -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#3DDADADA" />
                                <Setter Property="BorderBrush" Value="#DADADA" />
                            </MultiTrigger>
                            <!--  Selected  -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    <Condition Property="IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#3D26A0DA" />
                                <Setter Property="BorderBrush" Value="#26A0DA" />
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="viewModel:ScriptViewModel">
                                <controls:ScriptSelectionView
                                    Margin="3"
                                    Content="{Binding Selection}"
                                    Usage="{Binding Usage, ElementName=scriptListViewUserControl}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn
                        Binding="{Binding Name}"
                        Header="{x:Static ui:MainWindow.Name}"
                        IsReadOnly="True" />
                    <DataGridTextColumn
                        Binding="{Binding SafetyLevel.Name}"
                        Header="{x:Static ui:MainWindow.SafetyLevel}"
                        IsReadOnly="True" />
                    <DataGridTextColumn
                        Binding="{Binding Impact.Name}"
                        Header="{x:Static ui:MainWindow.Impact}"
                        IsReadOnly="True" />
                </DataGrid.Columns>
                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate d:DataContext="{x:Type CollectionViewGroup}" TargetType="{x:Type GroupItem}">
                                            <Expander IsExpanded="True">
                                                <Expander.Header>
                                                    <TextBlock FontWeight="SemiBold" ToolTip="{Binding Name.Description}">
                                                        <TextBlock.Text>
                                                            <MultiBinding StringFormat="{}{0} ({1})">
                                                                <Binding Path="Name.Name" />
                                                                <Binding Path="ItemCount" />
                                                            </MultiBinding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </Expander.Header>
                                                <Expander.Content>
                                                    <ItemsPresenter />
                                                </Expander.Content>
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </DataGrid.GroupStyle>
            </DataGrid>
        </DataTemplate>
    </UserControl.ContentTemplate>
</UserControl>